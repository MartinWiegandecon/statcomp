legend.background = element_rect(fill = "white", size = 4,
colour = "white"),
legend.justification = c(-0.5, 1.5),
legend.position = c(0, 1),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
) +
theme_bw() +
ggtitle(paste("Contribution to Growth in Country", country, "(", titlelabel, ")",
sep = " "))) %>%
print()
for(edu in c(99, 0, 1, 2, 3)){
if(edu == 0){
titlelab = "No Education"
}
else if(edu == 1){
titlelab = "Primary Education"
}
else if(edu == 2){
titlelab = "Secondary Education"
}
else if(edu == 3){
titlelab = "Tertiary Education"
}
else {
titlelab = ""
}
(finalnuts2_df %>%
filter(edu_broad == edu) %>%
ggplot(mapping = aes(x = log(popdensity), y = concentration,
color = country)) +
geom_point() +
geom_smooth(method = 'lm') +
scale_color_manual(values = c(col1, col2),
labels = c("Germany", "Spain")) +
labs(x = "Log Population Density", y = "Migrant Concentration",
color = "Country") +
theme(
text = element_text(family = "Palatino Linotype"),
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(fill = "white", size = 4,
colour = "white"),
legend.justification = c(-0.5, 1.5),
legend.position = c(0, 1),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
) +
theme_bw() +
ggtitle(paste("Migrant Concentration", titlelab, sep = "\n"))) %>%
print()
}
?assign
test
for(country in c('Germany', 'Spain')){
# Baseline Graph
test <- (barformat %>%
filter(countryname == paste(country)) %>%
ggplot(mapping = aes(x = factor(year), y = growth, fill = name)) +
geom_bar(color = "black", position = position_dodge(0.9), stat = 'summary', fun = 'mean') +
scale_fill_manual(values = c(col1, col2, col3),
labels = c("Natural", "Net Migration", "Total")) +
labs(x = "Year", y = "Growth Rate",
fill = "Growth Type") +
theme(
text = element_text(family = "Palatino Linotype"),
plot.title = element_text(face = "bold", size = 12,
lineheight = 0.8),
legend.background = element_rect(fill = "white", size = 4,
colour = "white"),
legend.justification = c(-0.5, 1.5),
legend.position = c(0, 1),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
) +
theme_bw() +
ggtitle(paste("Contribution to Growth in", country, sep = " ")))
# print()
# plots <- append(plots, base)
# Loop below and across national growth
for(above in c(0, 1)){
if(above == 0){
titlelab = "Below National Growth"
}
else {
titlelab = "Above National Growth"
}
# Graph by Above/Below
test1 <- (barformat %>%
filter(abovenatgrowth == above & countryname == paste(country)) %>%
ggplot(mapping = aes(x = factor(year), y = growth, fill = name)) +
geom_bar(color = "black", position = position_dodge(0.9), stat = 'summary', fun = 'mean') +
scale_fill_manual(values = c(col1, col2, col3),
labels = c("Natural", "Net Migration", "Total")) +
labs(x = "Year", y = "Growth Rate",
fill = "Growth Type") +
theme(
text = element_text(family = "Palatino Linotype"),
plot.title = element_text(face = "bold", size = 12,
lineheight = 0.8),
legend.background = element_rect(fill = "white", size = 4,
colour = "white"),
legend.justification = c(-0.5, 1.5),
legend.position = c(0, 1),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
) +
theme_bw() +
ggtitle(paste(paste("Contribution to Growth in", country, sep = " "),
titlelab, sep = "\n")))
# print()
assign(paste("test", above, sep = "_"), test1, envir = globalenv())
}
}
test
libary(gridExtra)
install.packages("gridExtra")
library(gridExtra)
?grid.arrange
install.packages("patchwork")
library(patchwork)
# Clean workspace
rm(list = ls())
# Clean workspace
rm(list = ls())
# DIRECTORIES
directory = getwd()
datapath = file.path(directory, "02_seminar_files/data")
funpath = file.path(directory, "02_seminar_files/funs")
outpath = file.path(directory, "02_seminar_files/out")
# source(file = file.path(funpath, "funs.R"))
# Required packages
packages <- c(
"eurostat",
"readxl",
"lubridate",
"tidyverse",
"dplyr",
"countrycode",
"extrafont",
"RColorBrewer",
"haven"
)
lapply(packages[!(packages %in% installed.packages())], install.packages)
# Load all packages to library
lapply(packages, library, character.only = TRUE)
# AMBIGUOUS COMMANDS
select <- dplyr::select
# Color settings
spectral_colors <- RColorBrewer::brewer.pal(11, "Spectral")
col1 = spectral_colors[1]
col2 = spectral_colors[10]
col3 = spectral_colors[3]
col4 = spectral_colors[11]
col5 = spectral_colors[8]
?ggplot
muniraw_df <- read_dta(file = file.path(
datapath, "Inquisition_analysis_dataset.dta"
))
muniraw_df %<>%
select(munisid, muni_name, autonomia, province, everything()) %>%
arrange(munisid)
# Make a table of summary statistics
# Check if I can make a map
municoord_df <- read_dta(file = file.path(
datapath, "muniscoord.dta"
)) %>%
rename(id = 1,
x = 2,
y = 3)
municoord_df %<>%
left_join(select(muniraw_df, munisid, adj_impact), by = c("id" = "munisid"))
library(magrittr)
# Required packages
packages <- c(
"eurostat",
"readxl",
"lubridate",
"tidyverse",
"dplyr",
"countrycode",
"extrafont",
"RColorBrewer",
"haven",
"magrittr"
)
municoord_df %<>%
left_join(select(muniraw_df, munisid, adj_impact), by = c("id" = "munisid"))
ggplot() +
geom_polygon(data = municoord_df, aes(fill = adj_impact),
x = x, y = y, group = group) +
theme_void() +
coord_quickmap()
municoord_df
ggplot() +
geom_polygon(data = municoord_df, aes(fill = adj_impact,
x = x, y = y, group = group)) +
theme_void() +
coord_quickmap()
ggplot() +
geom_polygon(data = municoord_df, aes(fill = adj_impact,
x = x, y = y)) +
theme_void() +
coord_quickmap()
ggplot() +
geom_polygon(data = municoord_df, aes(fill = adj_impact,
x = x, y = y),
size = 0, color = "gray45", alpha = 1) +
theme_void() +
coord_quickmap()
municoord_df %>%
View()
muniraw_df
muniraw_df %>%
mutate(quintiles = ntile(adj_impact, 5))
muniraw_df %<>%
mutate(quintiles = ntile(adj_impact, 5))
municoord_df %<>%
left_join(select(muniraw_df, munisid, adj_impact, quintiles), by = c("id" = "munisid"))
ggplot() +
geom_polygon(data = municoord_df, aes(fill = quintiles,
x = x, y = y),
size = 0, color = "gray45", alpha = 1) +
theme_void() +
coord_quickmap()
ggplot() +
geom_polygon(data = municoord_df, aes(fill = quintiles,
x = x, y = y, group = group),
size = 0, color = "gray45", alpha = 1) +
theme_void() +
coord_quickmap()
ggplot() +
geom_polygon(data = municoord_df, aes(fill = quintiles,
x = x, y = y, group = munisid),
size = 0, color = "gray45", alpha = 1) +
theme_void() +
coord_quickmap()
ggplot() +
geom_polygon(data = municoord_df, aes(fill = quintiles,
x = x, y = y, group = id),
size = 0, color = "gray45", alpha = 1) +
theme_void() +
coord_quickmap()
blues <- brewer.pal(9, "Blues")
blue_palette <- c(blues[2], blues[4], blues[6], blues[8], blues[9])
blue_inverse_palette <- rev(blue_palette)
theme_void() +
coord_quickmap()
ggplot() +
geom_polygon(data = municoord_df, aes(fill = quintiles,
x = x, y = y, group = id),
size = 0, color = "gray45", alpha = 1) +
scale_fill_manual(values = blue_inverse_palette, name = "Inquisition Impact \n Quintile",
breaks = c(1, 2, 3, 4, 5)) +
theme_void() +
coord_quickmap()
municoord_df
municoord_df %>%
group_by(quintiles)
municoord_df %>%
group_by(quintiles) %>%
count()
muniraw_df %<>%
mutate(quintiles = as.factor(ntile(adj_impact, 5)))
municoord_df <- read_dta(file = file.path(
datapath, "muniscoord.dta"
)) %>%
rename(id = 1,
x = 2,
y = 3)
municoord_df %<>%
left_join(select(muniraw_df, munisid, adj_impact, quintiles),
by = c("id" = "munisid"))
ggplot() +
geom_polygon(data = municoord_df, aes(fill = quintiles,
x = x, y = y, group = id),
size = 0, color = "gray45", alpha = 1) +
scale_fill_manual(values = blue_inverse_palette, name = "Inquisition Impact \n Quintile",
breaks = c(1, 2, 3, 4, 5)) +
theme_void() +
coord_quickmap()
ggplot() +
geom_polygon(data = municoord_df, aes(fill = quintiles,
x = x, y = y, group = id),
size = 0, color = "gray45", alpha = 1) +
scale_fill_manual(values = blue_palette, name = "Inquisition Impact \n Quintile",
breaks = c(1, 2, 3, 4, 5)) +
theme_void() +
coord_quickmap()
install.packages("Hmisc")
library(Hmisc)
describe(muniraw_df)
?describe
Hmisc::describe(muniraw_df)
?hmisc
muniraw_df
muniraw_df %>%
select(area) %>%
describe()
muniraw_df %>%
select(area) %>%
describe() %>%
html()
colnames(muniraw_df)
muniraw_df$share_carlists
muniraw_df$religious
colnames(muniraw_df)
muniraw_df$trust2
muniraw_df %>%
select(age) %>%
describe()
muniraw_df
muniraw_df %>%
ggplot(mapping = aes(x = adj_impact, y = gdppc)) +
geom_point()
muniraw_df %>%
filter(adj_impact > 0) %>%
ggplot(mapping = aes(x = adj_impact, y = gdppc)) +
geom_point()
muniraw_df %>%
filter(adj_impact > 0) %>%
ggplot(mapping = aes(x = adj_impact, y = log_gdppc)) +
geom_point()
filter(muniraw_df, is.na(adj_impact) == TRUE)
filter(muniraw_df, adj_impact_miss == TRUE)
colnames(muniraw_df)
muniraw_df %>%
mutate(non_zero_impact = ifelse(adj_impact > 0, adj_impact,
NA),
block = ifelse(is.na(non_zero_impact), 0,
ifelse(as.factor(ntile(non_zero_impact, 3)))))
muniraw_df %>%
mutate(non_zero_impact = ifelse(adj_impact > 0, adj_impact,
NA),
block = ifelse(is.na(non_zero_impact) == TRUE, 0,
ifelse(as.factor(ntile(non_zero_impact, 3)))))
muniraw_df %>%
mutate(non_zero_impact = ifelse(adj_impact > 0, adj_impact,
NA),
block = ifelse(is.na(non_zero_impact) == TRUE, 0,
as.factor(ntile(non_zero_impact, 3))))
muniraw_df %>%
mutate(non_zero_impact = ifelse(adj_impact > 0, adj_impact,
NA),
block = ifelse(is.na(non_zero_impact) == TRUE, 0,
as.factor(ntile(non_zero_impact, 3)))) %>%
ggplot(mapping = aes(x = gdppc, group = block,
fill = block)) +
geom_density(alpha = .4)
muniraw_df %>%
ggplot(mapping = aes(x = gdppc)) +
geom_density(alpha = .4)
muniraw_df %>%
ggplot(mapping = aes(x = log_gdppc)) +
geom_density(alpha = .4)
colnames(muniraw_df)
library(fixest)
install.packages("fixest")
library(fixest)
muniraw_df %>%
colnames()
muniraw_df <- read_dta(file = file.path(
datapath, "Inquisition_analysis_dataset.dta"
))
muniraw_df %<>%
select(munisid, muni_name, autonomia, province, adj_impact, gdppc, log_population,
religious, c_secondplus, trust,
age, class_upper, civil_married,
longitude, latitude, dist_river, dist_sea) %>%
arrange(munisid)
muniraw_df$pop_padron
muniraw_df %<>%
select(munisid, muni_name, autonomia, province, adj_impact, gdppc,
religious, c_secondplus, trust,
log_pop, age, class_upper, civil_married,
longitude, latitude, dist_river, dist_sea) %>%
arrange(munisid)
muniraw_df %<>%
select(munisid, muni_name, autonomia, province, adj_impact, gdppc,
religious, c_secondplus, trust2,
log_pop, age, class_upper, civil_married,
longitude, latitude, dist_river, dist_sea) %>%
arrange(munisid)
muniraw_df
write_csv(muniraw_df, file = file.path(
datapath, "munidata.csv"
))
municoord_df <- read_dta(file = file.path(
datapath, "muniscoord.dta"
)) %>%
rename(munisid = 1,
x = 2,
y = 3)
# Write
write_csv(municoord_df, file = file.path(
datapath, "municoordinates.csv"
))
# Check if I can make a map
read_csv(file = file.path(
datapath, "municoordinates.csv"
))
# Check if I can make a map
read_csv(file = file.path(
datapath, "munidata.csv"
))
colnames(muniraw_df)
ggplot() +
geom_polygon(data = municoord_df, aes(fill = adj_impact,
x = x, y = y, group = id),
size = 0, color = "gray45", alpha = 1) +
scale_fill_manual(values = blue_palette, name = "Inquisition Impact \n Quintile",
breaks = c(1, 2, 3, 4, 5)) +
theme_void() +
coord_quickmap()
municoord_df %<>%
left_join(select(muniraw_df, munisid, adj_impact, quintiles),
by = c("id" = "munisid"))
muniraw_df %<>%
mutate(quintiles = as.factor(ntile(adj_impact, 5)))
municoord_df %<>%
left_join(select(muniraw_df, munisid, adj_impact, quintiles),
by = c("id" = "munisid"))
municoord_df %<>%
left_join(select(muniraw_df, munisid, adj_impact, quintiles),
by = "munisid")
ggplot() +
geom_polygon(data = municoord_df, aes(fill = adj_impact,
x = x, y = y, group = id),
size = 0, color = "gray45", alpha = 1) +
scale_fill_manual(values = blue_palette, name = "Inquisition Impact \n Quintile",
breaks = c(1, 2, 3, 4, 5)) +
theme_void() +
coord_quickmap()
ggplot() +
geom_polygon(data = municoord_df, aes(fill = adj_impact,
x = x, y = y, group = munisid),
size = 0, color = "gray45", alpha = 1) +
scale_fill_manual(values = blue_palette, name = "Inquisition Impact \n Quintile",
breaks = c(1, 2, 3, 4, 5)) +
theme_void() +
coord_quickmap()
ggplot() +
geom_polygon(data = municoord_df, aes(fill = as.factor(adj_impact),
x = x, y = y, group = munisid),
size = 0, color = "gray45", alpha = 1) +
scale_fill_manual(values = blue_palette, name = "Inquisition Impact \n Quintile",
breaks = c(1, 2, 3, 4, 5)) +
theme_void() +
coord_quickmap()
ggplot() +
geom_polygon(data = municoord_df, aes(fill = adj_impact,
x = x, y = y, group = munisid)) +
theme_void() +
coord_quickmap(
)
ggplot() +
geom_polygon(data = municoord_df, aes(fill = quintiles,
x = x, y = y, group = munisid),
size = 0, color = "gray45", alpha = 1) +
scale_fill_manual(values = blue_palette, name = "Inquisition Impact \n Quintile",
breaks = c(1, 2, 3, 4, 5)) +
theme_void() +
coord_quickmap()
muniraw_df
muniraw_df <- read_dta(file = file.path(
datapath, "Inquisition_analysis_dataset.dta"
))
muniraw_df %<>%
select(munisid, muni_name, autonomia, province, adj_impact, gdppc,
religious, c_secondplus, trust2,
log_pop, age, class_upper, civil_married,
longitude, latitude, dist_river, dist_sea) %>%
arrange(munisid)
muniraw_df
muniraw_df %>%
select(gdppc)
write_csv(muniraw_df, file = file.path(
datapath, "munidata.csv"
))
saveRDS(muniraw, file = file.path(
datapath, "munidata.rds"
))
saveRDS(muniraw_df, file = file.path(
datapath, "munidata.rds"
))
municoord_df <- read_dta(file = file.path(
datapath, "muniscoord.dta"
)) %>%
rename(munisid = 1,
x = 2,
y = 3)
# Write
write_csv(municoord_df, file = file.path(
datapath, "municoordinates.csv"
))
saveRDS(municoord_df, file = file.path(
datapath, "municoordinates.rds"
))
muniraw_df %>%
mutate(non_zero_impact = ifelse(adj_impact > 0, adj_impact,
NA),
block = ifelse(is.na(non_zero_impact) == TRUE, 0,
as.factor(ntile(non_zero_impact, 3)))) %>%
ggplot(mapping = aes(x = gdppc, group = block,
fill = block)) +
geom_density(alpha = .4)
source("~/OneDrive/Teaching/statcomp/seminars/02_seminar_hints.R")
source("~/OneDrive/Teaching/statcomp/seminars/02_seminar_hints.R")
?read_csv
