nationalnatives = NAT)
migrantnat_df
filter(c_birth %in% c('FOR', 'NAT'),
y_arriv == 'TOTAL' & sex == 'T') %>%
pivot_wider(id_cols = c(geo, time), names_from = c_birth,
values_from = values)
filter(c_birth %in% c('FOR', 'NAT'),
y_arriv == 'TOTAL' & sex == 'T') %>%
pivot_wider(id_cols = c(geo, time), names_from = c_birth,
values_from = values)
filter(c_birth %in% c('FOR', 'NAT'),
y_arriv == 'TOTAL' & sex == 'T')
# NUTS 2
migrantnuts2_df <- get_eurostat("cens_11cobe_r2") %>%
filter(c_birth %in% c('FOR', 'NAT'),
y_arriv == 'TOTAL' & sex == 'T') %>%
pivot_wider(id_cols = c(geo, time), names_from = c_birth,
values_from = values)
# NUTS 2
migrantnuts2_df <- get_eurostat("cens_11cobe_r2")
migrantnuts2_df
# NUTS 2
migrantnuts2_df <- get_eurostat("cens_11cobe_r2") %>%
filter(c_birth %in% c('FOR', 'NAT'),
age == 'TOTAL' & sex == 'T') %>%
pivot_wider(id_cols = c(geo, time), names_from = c_birth,
values_from = values)
migrantnuts2_df
# NUTS 2
migrantnuts2_df <- get_eurostat("cens_11cobe_r2") %>%
filter(c_birth %in% c('FOR', 'NAT'),
age == 'TOTAL' & sex == 'T')
migrantnuts2_df
# NUTS 2
migrantnuts2_df <- get_eurostat("cens_11cobe_r2") %>%
filter(c_birth %in% c('FOR', 'NAT'),
age == 'TOTAL' & sex == 'T') %>%
pivot_wider(id_cols = c(geo, time, isced97), names_from = c_birth,
values_from = values)
migrantnuts2_df
# Generat joined education variable
migrantnuts2_df %>%
mutate(edu_broad = ifelse(isced97 == "NED", 0,
ifelse(isced97 %in% c('ED1'), 1,
ifelse(isced97 %in% c('ED2', 'ED3', 'ED4'), 2,
ifelse(isced97 %in% c('ED5', 'ED6'), 3,
ifelse(isced97 == "TOTAL", 99,
NA))))))
# Generat joined education variable
migrantnuts2_df %>%
mutate(edu_broad = ifelse(isced97 == "NED", 0,
ifelse(isced97 %in% c('ED1'), 1,
ifelse(isced97 %in% c('ED2', 'ED3', 'ED4'), 2,
ifelse(isced97 %in% c('ED5', 'ED6'), 3,
ifelse(isced97 == "TOTAL", 99,
NA)
)
)
)
)
) %>%
filter(edu_broad %in% c(0, 1, 2, 3, 99))
# Generat joined education variable
migrantnuts2_df %<>%
mutate(edu_broad = ifelse(isced97 == "NED", 0,
ifelse(isced97 %in% c('ED1'), 1,
ifelse(isced97 %in% c('ED2', 'ED3', 'ED4'), 2,
ifelse(isced97 %in% c('ED5', 'ED6'), 3,
ifelse(isced97 == "TOTAL", 99,
NA)
)
)
)
)
) %>%
filter(edu_broad %in% c(0, 1, 2, 3, 99))
# Select NUTS2 Regions, and national values
migrantnuts2_df %>%
mutate(test = str_sub(geo, 4, 4))
# Select NUTS2 Regions, and national values
migrantnuts2_df %>%
mutate(test = str_sub(geo, 4, 4)) %>%
filter(test != "")
migrantnuts2_df <- get_eurostat("cens_11cobe_r2") %>%
filter(c_birth %in% c('FOR', 'NAT'),
age == 'TOTAL' & sex == 'T') %>%
pivot_wider(id_cols = c(geo, time, isced97), names_from = c_birth,
values_from = values)
# Generate joined education variable
migrantnuts2_df %<>%
mutate(edu_broad = ifelse(isced97 == "NED", 0,
ifelse(isced97 %in% c('ED1'), 1,
ifelse(isced97 %in% c('ED2', 'ED3', 'ED4'), 2,
ifelse(isced97 %in% c('ED5', 'ED6'), 3,
ifelse(isced97 == "TOTAL", 99,
NA)
)
)
)
)
,
country = str_sub(geo, 1, 2)) %>%
filter(edu_broad %in% c(0, 1, 2, 3, 99),
country %in% countrylist)
migrantnuts2_df
# NUTS 2 (need to select NUTS2 later)
migrant_df <- get_eurostat("cens_11cobe_r2") %>%
filter(c_birth %in% c('FOR', 'NAT'),
age == 'TOTAL' & sex == 'T') %>%
pivot_wider(id_cols = c(geo, time, isced97), names_from = c_birth,
values_from = values)
# Generate joined education variable
migrants_df %<>%
mutate(edu_broad = ifelse(isced97 == "NED", 0,
ifelse(isced97 %in% c('ED1'), 1,
ifelse(isced97 %in% c('ED2', 'ED3', 'ED4'), 2,
ifelse(isced97 %in% c('ED5', 'ED6'), 3,
ifelse(isced97 == "TOTAL", 99,
NA)
)
)
)
)
,
country = str_sub(geo, 1, 2)) %>%
filter(edu_broad %in% c(0, 1, 2, 3, 99),
country %in% countrylist)
# Generate joined education variable
migrant_df %<>%
mutate(edu_broad = ifelse(isced97 == "NED", 0,
ifelse(isced97 %in% c('ED1'), 1,
ifelse(isced97 %in% c('ED2', 'ED3', 'ED4'), 2,
ifelse(isced97 %in% c('ED5', 'ED6'), 3,
ifelse(isced97 == "TOTAL", 99,
NA)
)
)
)
)
,
country = str_sub(geo, 1, 2)) %>%
filter(edu_broad %in% c(0, 1, 2, 3, 99),
country %in% countrylist)
# Select NUTS2 Regions, and national values
migrant_df %>%
mutate(nuts2_helper = str_sub(geo, 4, 4))
# Select NUTS2 Regions, and national values
migrant_df %>%
mutate(nuts2_helper = str_sub(geo, 4, 4)) %>%
filter(nuts2_helper != "")
# Select NUTS2 Regions, and national values
migrant_df %>%
mutate(nuts2_helper = str_sub(geo, 4, 4)) %>%
filter(nuts2_helper != "") %>%
rename(nuts2_code = geo) %>%
select(nuts2_coe, country, Fedu_broad, FOR, NAT)
# Select NUTS2 Regions, and national values
migrantsnuts2_df <- migrant_df %>%
mutate(nuts2_helper = str_sub(geo, 4, 4)) %>%
filter(nuts2_helper != "") %>%
rename(nuts2_code = geo) %>%
select(nuts2_code, country, Fedu_broad, FOR, NAT)
# Select NUTS2 Regions, and national values
migrantsnuts2_df <- migrant_df %>%
mutate(nuts2_helper = str_sub(geo, 4, 4)) %>%
filter(nuts2_helper != "") %>%
rename(nuts2_code = geo) %>%
select(nuts2_code, country, edu_broad, FOR, NAT)
# National values for stock
migrant_df
# National values for stock
migrant_df %>%
filter(geo %in% countrylist)
# National values for stock
migrant_df %>%
filter(geo %in% countrylist) %>%
rename(nationalmigrants = FOR,
nationalnatives = NAT) %>%
select(country, edu_broad, nationalmigrants, nationalnatives)
# National values for stock
migrantnat_df <- migrant_df %>%
filter(geo %in% countrylist) %>%
rename(nationalmigrants = FOR,
nationalnatives = NAT) %>%
select(country, edu_broad, nationalmigrants, nationalnatives)
# Merge to compute concentration variables
migrantnuts2_df
# Select NUTS2 Regions, and national values
migrantnuts2_df <- migrant_df %>%
mutate(nuts2_helper = str_sub(geo, 4, 4)) %>%
filter(nuts2_helper != "") %>%
rename(nuts2_code = geo) %>%
select(nuts2_code, country, edu_broad, FOR, NAT)
# Merge to compute concentration variables
migrantnuts2_df
# Merge to compute concentration variables
migrantnuts2_df %>%
left_join(migrantnat_df)
# Merge to compute concentration variables
migrantnuts2_df %>%
left_join(migrantnat_df) %>%
mutate(concentration = (FOR/nationalmigrants)/(NAT/nationalnatives))
# Merge to compute concentration variables
migrantnuts2_df %<>%
left_join(migrantnat_df) %>%
mutate(concentration = (FOR/nationalmigrants)/(NAT/nationalnatives))
nuts2_df
nuts2_geresp_df
# Merge in population density
migrantnuts2_df
# Merge in population density
migrantnuts2_df %>%
left_join(filter(nuts2_geresp_df, year == 2011), by = c("nuts2_code" == "geo"))
# Merge in population density
migrantnuts2_df %>%
left_join(filter(nuts2_geresp_df, year == 2011), by = c("nuts2_code" = "geo"))
# Merge in population density
migrantnuts2_df %>%
left_join(filter(select(nuts2_geresp_df, geo, year, popdensity), year == 2011), by = c("nuts2_code" = "geo"))
# Merge in population density
migrantnuts2_df %<>%
left_join(filter(select(nuts2_geresp_df, geo, year, popdensity), year == 2011),
by = c("nuts2_code" = "geo"))
# Merge in population density
migrantnuts2_df %<>%
left_join(filter(select(nuts2_geresp_df, geo, year, popdensity), year == 2011),
by = c("nuts2_code" = "geo"))
# Merge in population density
migrantnuts2_df %>%
left_join(filter(select(nuts2_geresp_df, geo, year, popdensity), year == 2011),
by = c("nuts2_code" = "geo"))
# Merge in population density
finalnuts2_df <- migrantnuts2_df %>%
left_join(filter(select(nuts2_geresp_df, geo, year, popdensity), year == 2011),
by = c("nuts2_code" = "geo"))
finalnuts2_df
# Select NUTS2 Regions, and national values
migrantnuts2_df <- migrant_df %>%
mutate(nuts2_helper = str_sub(geo, 4, 4)) %>%
filter(nuts2_helper != "") %>%
rename(nuts2_code = geo) %>%
select(nuts2_code, country, edu_broad, FOR, NAT) %>%
group_by(nuts2_code, country, edu_broad) %>%
summarise_at(vars(FOR, NAT), ~sum(.))
migrantnuts2_df
# Select NUTS2 Regions, and national values
migrantnuts2_df <- migrant_df %>%
mutate(nuts2_helper = str_sub(geo, 4, 4)) %>%
filter(nuts2_helper != "") %>%
rename(nuts2_code = geo) %>%
select(nuts2_code, country, edu_broad, FOR, NAT) %>%
group_by(nuts2_code, country, edu_broad) %>%
summarise_at(vars(FOR, NAT), ~sum(.)) %>%
ungroup()
migrantnat_df
# National values for stock
migrantnat_df <- migrant_df %>%
filter(geo %in% countrylist) %>%
rename(nationalmigrants = FOR,
nationalnatives = NAT) %>%
select(country, edu_broad, nationalmigrants, nationalnatives)  %>%
group_by(country, edu_broad) %>%
summarise_at(vars(nationalmigrants, nationalnatives), ~sum(.)) %>%
ungroup()
# Merge to compute concentration variables
migrantnuts2_df %<>%
left_join(migrantnat_df) %>%
mutate(concentration = (FOR/nationalmigrants)/(NAT/nationalnatives))
migrantnuts2_df
# Merge in population density
finalnuts2_df <- migrantnuts2_df %>%
left_join(filter(select(nuts2_geresp_df, geo, year, popdensity), year == 2011),
by = c("nuts2_code" = "geo"))
finalnuts2_df
for(edu in c(99, 0, 1, 2, 3)){
migrantnuts2_df %>%
filter(edu_broad == edu) %>%
ggplot(mapping = aes(x = log(popdensity), y = concentration, color = country)) +
geom_point() %>%
print()
}
(migrantnuts2_df %>%
filter(edu_broad == edu) %>%
ggplot(mapping = aes(x = log(popdensity), y = concentration, color = country)) +
geom_point()= %>%
(migrantnuts2_df %>%
filter(edu_broad == edu) %>%
ggplot(mapping = aes(x = log(popdensity), y = concentration, color = country)) +
geom_point()) %>%
print()
(finalnuts2_df %>%
filter(edu_broad == edu) %>%
ggplot(mapping = aes(x = log(popdensity), y = concentration, color = country)) +
geom_point()) %>%
print()
for(edu in c(99, 0, 1, 2, 3)){
(finalnuts2_df %>%
filter(edu_broad == edu) %>%
ggplot(mapping = aes(x = log(popdensity), y = concentration,
color = country)) +
geom_point() %>%
geom_smooth()) %>%
print()
}
for(edu in c(99, 0, 1, 2, 3)){
(finalnuts2_df %>%
filter(edu_broad == edu) %>%
ggplot(mapping = aes(x = log(popdensity), y = concentration,
color = country)) +
geom_point() +
geom_smooth()) %>%
print()
}
?geom_smooth
for(edu in c(99, 0, 1, 2, 3)){
(finalnuts2_df %>%
filter(edu_broad == edu) %>%
ggplot(mapping = aes(x = log(popdensity), y = concentration,
color = country)) +
geom_point() +
geom_smooth(method = 'lm')) %>%
print()
}
for(edu in c(99, 0, 1, 2, 3)){
(finalnuts2_df %>%
filter(edu_broad == edu) %>%
ggplot(mapping = aes(x = log(popdensity), y = concentration,
color = country)) +
geom_point() +
geom_smooth(method = 'lm') +
scale_fill_manual(values = c(col1, col2),
labels = c("Germany", "Spain")) +
labs(x = "Log Population Density", y = "Migrant Concentration") +
theme(
text = element_text(family = "Palatino Linotype"),
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(fill = "white", size = 4,
colour = "white"),
legend.justification = c(-0.5, 1.5),
legend.position = c(0, 1),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
) +
theme_bw() +
ggtitle(paste("Contribution to Growth in Country", country, "(", titlelabel, ")",
sep = " "))) %>%
print()
}
(finalnuts2_df %>%
filter(edu_broad == edu) %>%
ggplot(mapping = aes(x = log(popdensity), y = concentration,
color = country)) +
geom_point() +
geom_smooth(method = 'lm') +
scale_color_manual(values = c(col1, col2),
labels = c("Germany", "Spain")) +
labs(x = "Log Population Density", y = "Migrant Concentration") +
theme(
text = element_text(family = "Palatino Linotype"),
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(fill = "white", size = 4,
colour = "white"),
legend.justification = c(-0.5, 1.5),
legend.position = c(0, 1),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
) +
theme_bw() +
ggtitle(paste("Contribution to Growth in Country", country, "(", titlelabel, ")",
sep = " "))) %>%
print()
(finalnuts2_df %>%
filter(edu_broad == edu) %>%
ggplot(mapping = aes(x = log(popdensity), y = concentration,
color = country)) +
geom_point() +
geom_smooth(method = 'lm') +
scale_color_manual(values = c(col1, col2),
labels = c("Germany", "Spain")) +
labs(x = "Log Population Density", y = "Migrant Concentration",
color = "Country") +
theme(
text = element_text(family = "Palatino Linotype"),
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(fill = "white", size = 4,
colour = "white"),
legend.justification = c(-0.5, 1.5),
legend.position = c(0, 1),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
) +
theme_bw() +
ggtitle(paste("Contribution to Growth in Country", country, "(", titlelabel, ")",
sep = " "))) %>%
print()
for(edu in c(99, 0, 1, 2, 3)){
if(edu == 0){
titlelab = "No Education"
}
else if(edu == 1){
titlelab = "Primary Education"
}
else if(edu == 2){
titlelab = "Secondary Education"
}
else if(edu == 3){
titlelab = "Tertiary Education"
}
else {
titlelab = ""
}
(finalnuts2_df %>%
filter(edu_broad == edu) %>%
ggplot(mapping = aes(x = log(popdensity), y = concentration,
color = country)) +
geom_point() +
geom_smooth(method = 'lm') +
scale_color_manual(values = c(col1, col2),
labels = c("Germany", "Spain")) +
labs(x = "Log Population Density", y = "Migrant Concentration",
color = "Country") +
theme(
text = element_text(family = "Palatino Linotype"),
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(fill = "white", size = 4,
colour = "white"),
legend.justification = c(-0.5, 1.5),
legend.position = c(0, 1),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
) +
theme_bw() +
ggtitle(paste("Migrant Concentration", titlelab, sep = "\n"))) %>%
print()
}
?assign
test
for(country in c('Germany', 'Spain')){
# Baseline Graph
test <- (barformat %>%
filter(countryname == paste(country)) %>%
ggplot(mapping = aes(x = factor(year), y = growth, fill = name)) +
geom_bar(color = "black", position = position_dodge(0.9), stat = 'summary', fun = 'mean') +
scale_fill_manual(values = c(col1, col2, col3),
labels = c("Natural", "Net Migration", "Total")) +
labs(x = "Year", y = "Growth Rate",
fill = "Growth Type") +
theme(
text = element_text(family = "Palatino Linotype"),
plot.title = element_text(face = "bold", size = 12,
lineheight = 0.8),
legend.background = element_rect(fill = "white", size = 4,
colour = "white"),
legend.justification = c(-0.5, 1.5),
legend.position = c(0, 1),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
) +
theme_bw() +
ggtitle(paste("Contribution to Growth in", country, sep = " ")))
# print()
# plots <- append(plots, base)
# Loop below and across national growth
for(above in c(0, 1)){
if(above == 0){
titlelab = "Below National Growth"
}
else {
titlelab = "Above National Growth"
}
# Graph by Above/Below
test1 <- (barformat %>%
filter(abovenatgrowth == above & countryname == paste(country)) %>%
ggplot(mapping = aes(x = factor(year), y = growth, fill = name)) +
geom_bar(color = "black", position = position_dodge(0.9), stat = 'summary', fun = 'mean') +
scale_fill_manual(values = c(col1, col2, col3),
labels = c("Natural", "Net Migration", "Total")) +
labs(x = "Year", y = "Growth Rate",
fill = "Growth Type") +
theme(
text = element_text(family = "Palatino Linotype"),
plot.title = element_text(face = "bold", size = 12,
lineheight = 0.8),
legend.background = element_rect(fill = "white", size = 4,
colour = "white"),
legend.justification = c(-0.5, 1.5),
legend.position = c(0, 1),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
) +
theme_bw() +
ggtitle(paste(paste("Contribution to Growth in", country, sep = " "),
titlelab, sep = "\n")))
# print()
assign(paste("test", above, sep = "_"), test1, envir = globalenv())
}
}
test
libary(gridExtra)
install.packages("gridExtra")
library(gridExtra)
?grid.arrange
install.packages("patchwork")
library(patchwork)
# Clean workspace
rm(list = ls())
